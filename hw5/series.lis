     1                                  section .data
     2 00000000 57656C636F6D652074-         welcome_msg db "Welcome to Taylor Series by Kenny Garcia.", 10, 0
     2 00000009 6F205461796C6F7220-
     2 00000012 536572696573206279-
     2 0000001B 204B656E6E79204761-
     2 00000024 726369612E0A00     
     3 0000002B 5468697320736F6674-         software_msg db "This software will compute any power of e that you may need.", 10, 0
     3 00000034 776172652077696C6C-
     3 0000003D 20636F6D7075746520-
     3 00000046 616E7920706F776572-
     3 0000004F 206F66206520746861-
     3 00000058 7420796F75206D6179-
     3 00000061 206E6565642E0A00   
     4 00000069 506C6561736520656E-         input_prompt_x db "Please enter a float number value for x (e.g., 17.55): ", 0
     4 00000072 746572206120666C6F-
     4 0000007B 6174206E756D626572-
     4 00000084 2076616C756520666F-
     4 0000008D 7220782028652E672E-
     4 00000096 2C2031372E3535293A-
     4 0000009F 2000               
     5 000000A1 506C6561736520656E-         input_prompt_n db "Please enter the number of terms to include in the Taylor sum (e.g., 8): ", 0
     5 000000AA 74657220746865206E-
     5 000000B3 756D626572206F6620-
     5 000000BC 7465726D7320746F20-
     5 000000C5 696E636C7564652069-
     5 000000CE 6E2074686520546179-
     5 000000D7 6C6F722073756D2028-
     5 000000E0 652E672E2C2038293A-
     5 000000E9 2000               
     6 000000EB 5468652074696D6520-         clock_start_msg db "The time on the clock is now %llu tics and Taylor has been called.", 10, 0
     6 000000F4 6F6E2074686520636C-
     6 000000FD 6F636B206973206E6F-
     6 00000106 7720256C6C75207469-
     6 0000010F 637320616E64205461-
     6 00000118 796C6F722068617320-
     6 00000121 6265656E2063616C6C-
     6 0000012A 65642E0A00         
     7 0000012F 5468616E6B20796F75-         thank_you_msg db "Thank you for waiting.", 10, 0
     7 00000138 20666F722077616974-
     7 00000141 696E672E0A00       
     8 00000147 5468652074696D6520-         clock_end_msg db "The time on the clock when Taylor terminated was %llu tics.", 10, 0
     8 00000150 6F6E2074686520636C-
     8 00000159 6F636B207768656E20-
     8 00000162 5461796C6F72207465-
     8 0000016B 726D696E6174656420-
     8 00000174 77617320256C6C7520-
     8 0000017D 746963732E0A00     
     9 00000184 546865206578656375-         exec_time_msg db "The execution time was %llu tics.", 10, 0
     9 0000018D 74696F6E2074696D65-
     9 00000196 2077617320256C6C75-
     9 0000019F 20746963732E0A00   
    10 000001A7 54686520636F6D7075-         result_msg db "The computed approximation of e^x is: %.8f", 10, 0
    10 000001B0 74656420617070726F-
    10 000001B9 78696D6174696F6E20-
    10 000001C2 6F6620655E78206973-
    10 000001CB 3A20252E38660A00   
    11 000001D3 5468616E6B20796F75-         goodbye_msg db "Thank you for using the Eyere exponential calculator.", 10, 0
    11 000001DC 20666F72207573696E-
    11 000001E5 672074686520457965-
    11 000001EE 7265206578706F6E65-
    11 000001F7 6E7469616C2063616C-
    11 00000200 63756C61746F722E0A-
    11 00000209 00                 
    12 0000020A 506C65617365207265-         outro_msg db "Please return another day. The computed value will be set to the caller functions.", 10, 0
    12 00000213 7475726E20616E6F74-
    12 0000021C 686572206461792E20-
    12 00000225 54686520636F6D7075-
    12 0000022E 7465642076616C7565-
    12 00000237 2077696C6C20626520-
    12 00000240 73657420746F207468-
    12 00000249 652063616C6C657220-
    12 00000252 66756E6374696F6E73-
    12 0000025B 2E0A00             
    13 0000025E 546865206472697665-         driver_msg db "The driver received this number %.8f and will keep it.", 10, 0
    13 00000267 722072656365697665-
    13 00000270 642074686973206E75-
    13 00000279 6D62657220252E3866-
    13 00000282 20616E642077696C6C-
    13 0000028B 206B6565702069742E-
    13 00000294 0A00               
    14 00000296 476F6F646279652E0A-         farewell_msg db "Goodbye.", 10, 0
    14 0000029F 00                 
    15                                  
    16                                      ; Format strings for scanf and printf
    17 000002A0 256C6600                    format_float db "%lf", 0  ; Format for reading a double
    18 000002A4 256C7500                    format_int db "%lu", 0    ; Format for reading an unsigned long integer
    19                                  
    20                                  section .bss
    21 00000000 ????????????????            x resq 1                ; Storage for x
    22 00000008 ????????????????            n resq 1                ; Storage for n
    23 00000010 ????????????????            start_tics resq 1       ; Start tics
    24 00000018 ????????????????            end_tics resq 1         ; End tics
    25                                  
    26                                  section .text
    27                                      global series
    28                                      extern taylor
    29                                      extern printf           ; To print formatted strings
    30                                      extern scanf            ; To read user input
    31                                  
    32                                  ; double series(double x, unsigned long n)
    33                                  series:
    34                                      ; Prologue
    35 00000000 55                          push rbp
    36 00000001 4889E5                      mov rbp, rsp
    37 00000004 4883EC20                    sub rsp, 32             ; Allocate stack space for local variables
    38                                  
    39                                      ; Print welcome message
    40 00000008 488D3C25[00000000]          lea rdi, [welcome_msg]
    41 00000010 4831C0                      xor rax, rax
    42 00000013 E8(00000000)                call printf             ; printf(welcome_msg)
    43                                  
    44                                      ; Print software purpose message
    45 00000018 488D3C25[2B000000]          lea rdi, [software_msg]
    46 00000020 4831C0                      xor rax, rax
    47 00000023 E8(00000000)                call printf             ; printf(software_msg)
    48                                  
    49                                      ; Prompt for x
    50 00000028 488D3C25[69000000]          lea rdi, [input_prompt_x] ; Load the x prompt string
    51 00000030 4831C0                      xor rax, rax
    52 00000033 E8(00000000)                call printf             ; Display prompt
    53                                  
    54 00000038 488D3425[00000000]          lea rsi, [x]              ; Address to store x
    55 00000040 488D3C25[A0020000]          lea rdi, [format_float]   ; Format for float input "%lf"
    56 00000048 4831C0                      xor rax, rax
    57 0000004B E8(00000000)                call scanf                ; scanf("%lf", &x)
    58                                  
    59                                      ; Prompt for n
    60 00000050 488D3C25[A1000000]          lea rdi, [input_prompt_n] ; Load the n prompt string
    61 00000058 4831C0                      xor rax, rax
    62 0000005B E8(00000000)                call printf             ; Display prompt
    63                                  
    64 00000060 488D3425[08000000]          lea rsi, [n]              ; Address to store n
    65 00000068 488D3C25[A4020000]          lea rdi, [format_int]     ; Format for integer input "%lu"
    66 00000070 4831C0                      xor rax, rax
    67 00000073 E8(00000000)                call scanf                ; scanf("%lu", &n)
    68                                  
    69                                      ; Start timing
    70 00000078 0F31                        rdtsc                       ; Read tics into EDX:EAX
    71 0000007A 48C1E220                    shl rdx, 32
    72 0000007E 4809D0                      or rax, rdx
    73 00000081 48890425[10000000]          mov qword [start_tics], rax
    74                                  
    75                                      ; Print clock start message
    76 00000089 488D3C25[EB000000]          lea rdi, [clock_start_msg]
    77 00000091 4889C6                      mov rsi, rax
    78 00000094 4831C0                      xor rax, rax                ; printf expects 0 floating-point arguments
    79 00000097 E8(00000000)                call printf                 ; printf(clock_start_msg, start_tics)
    80                                  
    81                                      ; Call taylor function
    82 0000009C F20F100425-                 movsd xmm0, qword [x]       ; Load x into xmm0
    82 000000A1 [00000000]         
    83 000000A5 488B3C25[08000000]          mov rdi, qword [n]          ; Move n into rdi
    84 000000AD E8(00000000)                call taylor                 ; Call taylor(x, n)
    85                                  
    86                                      ; End timing
    87 000000B2 0F31                        rdtsc                       ; Read tics into EDX:EAX
    88 000000B4 48C1E220                    shl rdx, 32
    89 000000B8 4809D0                      or rax, rdx
    90 000000BB 48890425[18000000]          mov qword [end_tics], rax
    91                                  
    92                                      ; Print clock end message
    93 000000C3 488D3C25[47010000]          lea rdi, [clock_end_msg]
    94 000000CB 4889C6                      mov rsi, rax
    95 000000CE 4831C0                      xor rax, rax
    96 000000D1 E8(00000000)                call printf                 ; printf(clock_end_msg, end_tics)
    97                                  
    98                                      ; Calculate execution time
    99 000000D6 488B0425[18000000]          mov rax, qword [end_tics]
   100 000000DE 482B0425[10000000]          sub rax, qword [start_tics]
   101                                  
   102                                      ; Print execution time
   103 000000E6 488D3C25[84010000]          lea rdi, [exec_time_msg]
   104 000000EE 4889C6                      mov rsi, rax
   105 000000F1 4831C0                      xor rax, rax
   106 000000F4 E8(00000000)                call printf                 ; printf(exec_time_msg, exec_time)
   107                                  
   108                                      ; Print result
   109 000000F9 488D3C25[A7010000]          lea rdi, [result_msg]
   110 00000101 B801000000                  mov rax, 1                  ; printf expects 1 floating-point argument
   111 00000106 E8(00000000)                call printf                 ; printf(result_msg, result in xmm0)
   112                                  
   113                                      ; Print outro messages
   114 0000010B 488D3C25[D3010000]          lea rdi, [goodbye_msg]
   115 00000113 4831C0                      xor rax, rax
   116 00000116 E8(00000000)                call printf
   117                                  
   118 0000011B 488D3C25[0A020000]          lea rdi, [outro_msg]
   119 00000123 4831C0                      xor rax, rax
   120 00000126 E8(00000000)                call printf
   121                                  
   122 0000012B 488D3C25[5E020000]          lea rdi, [driver_msg]
   123 00000133 B801000000                  mov rax, 1
   124 00000138 E8(00000000)                call printf                 ; printf(driver_msg, result in xmm0)
   125                                  
   126 0000013D 488D3C25[96020000]          lea rdi, [farewell_msg]
   127 00000145 4831C0                      xor rax, rax
   128 00000148 E8(00000000)                call printf
   129                                  
   130                                      ; Epilogue
   131 0000014D C9                          leave
   132 0000014E C3                          ret
   133                                  
